法1：位运算，利用与运算& 异或运算^的特点循环求 进位和b  无进位和a  直至进位和b==0
时间O(1)最多为int的长度32次固定值  空间O(1)
执行用时：0 ms, 在所有 C++ 提交中击败了100.00% 的用户
内存消耗：5.8 MB, 在所有 C++ 提交中击败了68.46% 的用户
class Solution {
public:
    int add(int a, int b) {
        while(b != 0)
        {
            int c = (unsigned int)(a & b) << 1;   // 这里的C需要设为无符号数，因为当b或a为负数时，C++中负数不支持左移位，其结果是不定的
            a = a ^ b;
            b = c;
        }
        return a;
    }
};

法2：递归调用，写法略，原理相同
