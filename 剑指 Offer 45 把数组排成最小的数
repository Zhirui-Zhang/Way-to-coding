法1：lambda内置表达式，很简单，但是不好记   核心[capture](parameters) mutable ->return-type{statement}
执行用时：4 ms, 在所有 C++ 提交中击败了95.05% 的用户
内存消耗：11 MB, 在所有 C++ 提交中击败了65.80% 的用户
class Solution {
public:
    string minNumber(vector<int>& nums) {
        vector<string> temp;  //临时数组，里面的元素为字符串类型
        for(auto num : nums)
        {
            temp.push_back(to_string(num));
        }
        sort(temp.begin(), temp.end(), [](string& s1, string& s2){return s1 + s2 < s2 + s1;});  //这里的两个引用&可以省略
        //或者写成auto compare = [](string s1, string s2){return s1 + s2 < s2 + s1;}
        //sort(temp.begin(), temp.end(), compare);
        string res;    //最终输出的字符串
        for(auto s : temp)
        {
            res += s;
        }
        return res;
    }
};

法2：快速排序法，即分而治之，递归法，应用模板
